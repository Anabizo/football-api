// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Campeonato {
  id           Int            @id @default(autoincrement())
  nome         String
  slug         String
  tipo         String
  edicaoAtual  String
  status       Boolean
  logo         String?
  estatisticas Estatisticas[]
}

model Time {
  id               Int                @id @default(autoincrement())
  nome             String
  sigla            String?
  estadio          String?
  cidade           String?
  escudo           String?
  // Relacionamentos
  jogadores        Jogador[]
  estatisticas     Estatisticas[]
  estatisticasTime EstatisticasTime[]
}

model Estatisticas {
  id           Int        @id @default(autoincrement())
  pontos       Int
  jogos        Int
  vitorias     Int
  derrotas     Int
  empates      Int
  golsMarcados Int
  golsSofridos Int
  saldoGols    Int
  posicao      Int
  timeId       Int        @unique
  nomeTime     String
  escudo       String?
  campeonatoId Int
  time         Time       @relation(fields: [timeId], references: [id])
  campeonato   Campeonato @relation(fields: [campeonatoId], references: [id])
}

model Partida {
  partida_id            Int      @id @unique
  time_mandante_id      Int
  time_mandante_nome    String
  time_mandante_sigla   String
  time_mandante_escudo  String
  time_visitante_id     Int
  time_visitante_nome   String
  time_visitante_sigla  String
  time_visitante_escudo String
  status                String
  slug                  String   @unique
  data_realizacao       DateTime
}

model EstatisticasTime {
  id               Int   @id @default(autoincrement())
  jogoId           Int
  timeId           Int
  chutes           Int
  chutesGol        Int
  posseBola        Float
  passes           Int
  precisaoPasse    Float
  faltas           Int
  cartoesAmarelos  Int
  cartoesVermelhos Int
  impedimentos     Int
  escanteios       Int

  // Relacionamentos
  time Time @relation(fields: [timeId], references: [id])
}

model Jogador {
  id           Int                   @id @default(autoincrement())
  nome         String
  numeroCamisa Int
  posicao      String
  timeId       Int
  // Relacionamentos
  time         Time                  @relation(fields: [timeId], references: [id])
  estatisticas EstatisticasJogador[]
}

model EstatisticasJogador {
  id               Int @id @default(autoincrement())
  jogoId           Int
  jogadorId        Int
  gols             Int
  assistencias     Int
  cartoesAmarelos  Int
  cartoesVermelhos Int

  // Relacionamentos
  jogador Jogador @relation(fields: [jogadorId], references: [id])
}
